// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.DataMigration;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Input for select source scenario
    /// </summary>
    public partial class SelectSourceServerForMigrationScenarioInput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// SelectSourceServerForMigrationScenarioInput class.
        /// </summary>
        public SelectSourceServerForMigrationScenarioInput()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// SelectSourceServerForMigrationScenarioInput class.
        /// </summary>
        /// <param name="sourceConnectionInfo">Information for connecting to
        /// source</param>
        /// <param name="targetServerVersion">Version of the target
        /// server</param>
        public SelectSourceServerForMigrationScenarioInput(ConnectionInfo sourceConnectionInfo, string targetServerVersion = default(string))
        {
            SourceConnectionInfo = sourceConnectionInfo;
            TargetServerVersion = targetServerVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets information for connecting to source
        /// </summary>
        [JsonProperty(PropertyName = "sourceConnectionInfo")]
        public ConnectionInfo SourceConnectionInfo { get; set; }

        /// <summary>
        /// Gets or sets version of the target server
        /// </summary>
        [JsonProperty(PropertyName = "targetServerVersion")]
        public string TargetServerVersion { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SourceConnectionInfo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceConnectionInfo");
            }
        }
    }
}
