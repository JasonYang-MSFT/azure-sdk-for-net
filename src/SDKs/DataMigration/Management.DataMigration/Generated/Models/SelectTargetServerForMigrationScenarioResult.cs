// Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataMigrationService.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.DataMigrationService;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Scenario result for SelectTargetServerForMigrationScenario
    /// </summary>
    public partial class SelectTargetServerForMigrationScenarioResult : ScenarioRunnerResult
    {
        /// <summary>
        /// Initializes a new instance of the
        /// SelectTargetServerForMigrationScenarioResult class.
        /// </summary>
        public SelectTargetServerForMigrationScenarioResult()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// SelectTargetServerForMigrationScenarioResult class.
        /// </summary>
        /// <param name="validationErrors">Validation errors associated with
        /// the scenario</param>
        /// <param name="targetServerVersion">Target server version</param>
        /// <param name="serverDefaultDataPath">Default path of the data
        /// files</param>
        /// <param name="serverDefaultLogPath">Default path of the log
        /// files</param>
        /// <param name="targetServerBrandVersion">Target server brand
        /// version</param>
        public SelectTargetServerForMigrationScenarioResult(IList<ReportableException> validationErrors = default(IList<ReportableException>), string targetServerVersion = default(string), string serverDefaultDataPath = default(string), string serverDefaultLogPath = default(string), string targetServerBrandVersion = default(string))
            : base(validationErrors)
        {
            TargetServerVersion = targetServerVersion;
            ServerDefaultDataPath = serverDefaultDataPath;
            ServerDefaultLogPath = serverDefaultLogPath;
            TargetServerBrandVersion = targetServerBrandVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets target server version
        /// </summary>
        [JsonProperty(PropertyName = "targetServerVersion")]
        public string TargetServerVersion { get; private set; }

        /// <summary>
        /// Gets default path of the data files
        /// </summary>
        [JsonProperty(PropertyName = "serverDefaultDataPath")]
        public string ServerDefaultDataPath { get; private set; }

        /// <summary>
        /// Gets default path of the log files
        /// </summary>
        [JsonProperty(PropertyName = "serverDefaultLogPath")]
        public string ServerDefaultLogPath { get; private set; }

        /// <summary>
        /// Gets target server brand version
        /// </summary>
        [JsonProperty(PropertyName = "targetServerBrandVersion")]
        public string TargetServerBrandVersion { get; private set; }

    }
}
