// Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataMigrationService.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.DataMigrationService;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Input for Start MySQL Migration Scenario
    /// </summary>
    public partial class StartMySqlMigrationScenarioInput : StartForeignMigrationScenarioInputBase
    {
        /// <summary>
        /// Initializes a new instance of the StartMySqlMigrationScenarioInput
        /// class.
        /// </summary>
        public StartMySqlMigrationScenarioInput()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StartMySqlMigrationScenarioInput
        /// class.
        /// </summary>
        /// <param name="targetConnectionInfo">Information for connecting to
        /// target</param>
        /// <param name="targetDatabaseName">Target database name</param>
        /// <param name="projectName">Name of the migration project</param>
        /// <param name="projectLocation">An URL that points to the drop
        /// location to access project artifacts</param>
        /// <param name="selectedTables">Metadata of the tables selected for
        /// migration</param>
        /// <param name="sourceConnectionInfo">Information for connecting to
        /// MySQL source</param>
        public StartMySqlMigrationScenarioInput(ConnectionInfo targetConnectionInfo, string targetDatabaseName, string projectName, string projectLocation, IList<ForeignDataMigrationTableResult> selectedTables, MySqlConnectionInfo sourceConnectionInfo)
            : base(targetConnectionInfo, targetDatabaseName, projectName, projectLocation, selectedTables)
        {
            SourceConnectionInfo = sourceConnectionInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets information for connecting to MySQL source
        /// </summary>
        [JsonProperty(PropertyName = "sourceConnectionInfo")]
        public MySqlConnectionInfo SourceConnectionInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (SourceConnectionInfo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceConnectionInfo");
            }
        }
    }
}
