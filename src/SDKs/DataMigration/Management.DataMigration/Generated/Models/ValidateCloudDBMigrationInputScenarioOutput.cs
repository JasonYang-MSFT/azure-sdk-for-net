// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.DataMigration;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Output for input validation scenario
    /// </summary>
    public partial class ValidateCloudDBMigrationInputScenarioOutput : MigrationScenarioResult
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ValidateCloudDBMigrationInputScenarioOutput class.
        /// </summary>
        public ValidateCloudDBMigrationInputScenarioOutput()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ValidateCloudDBMigrationInputScenarioOutput class.
        /// </summary>
        /// <param name="id">Result identifier</param>
        /// <param name="name">Name of database</param>
        /// <param name="restoreDatabaseNameErrors">Errors associated with the
        /// RestoreDatabaseName</param>
        /// <param name="backupFolderErrors">Errors associated with the
        /// BackupFolder path</param>
        /// <param name="backupShareCredentialsErrors">Errors associated with
        /// backup share user name and password credentials</param>
        public ValidateCloudDBMigrationInputScenarioOutput(string id = default(string), string name = default(string), IList<ReportableException> restoreDatabaseNameErrors = default(IList<ReportableException>), IList<ReportableException> backupFolderErrors = default(IList<ReportableException>), IList<ReportableException> backupShareCredentialsErrors = default(IList<ReportableException>))
            : base(id)
        {
            Name = name;
            RestoreDatabaseNameErrors = restoreDatabaseNameErrors;
            BackupFolderErrors = backupFolderErrors;
            BackupShareCredentialsErrors = backupShareCredentialsErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets name of database
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets errors associated with the RestoreDatabaseName
        /// </summary>
        [JsonProperty(PropertyName = "restoreDatabaseNameErrors")]
        public IList<ReportableException> RestoreDatabaseNameErrors { get; private set; }

        /// <summary>
        /// Gets errors associated with the BackupFolder path
        /// </summary>
        [JsonProperty(PropertyName = "backupFolderErrors")]
        public IList<ReportableException> BackupFolderErrors { get; private set; }

        /// <summary>
        /// Gets errors associated with backup share user name and password
        /// credentials
        /// </summary>
        [JsonProperty(PropertyName = "backupShareCredentialsErrors")]
        public IList<ReportableException> BackupShareCredentialsErrors { get; private set; }

    }
}
