// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.DataMigration;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Output of the scenario that migrates Cloud DB to Azure SQL on VM
    /// </summary>
    public partial class RunCloudDBMigrationScenarioOutput : StartMigrationScenarioResult
    {
        /// <summary>
        /// Initializes a new instance of the RunCloudDBMigrationScenarioOutput
        /// class.
        /// </summary>
        public RunCloudDBMigrationScenarioOutput()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RunCloudDBMigrationScenarioOutput
        /// class.
        /// </summary>
        /// <param name="id">Result identifier</param>
        /// <param name="name">Name of migration</param>
        /// <param name="startedOn">Migration start time</param>
        /// <param name="endedOn">Migration end time</param>
        /// <param name="status">Current status of migration. Possible values
        /// include: 'Default', 'Connecting', 'SourceAndTargetSelected',
        /// 'SelectLogins', 'Configured', 'Running', 'Error', 'Cancelled',
        /// 'Completed', 'CompletedWithWarnings'</param>
        /// <param name="state">Current state of migration. Possible values
        /// include: 'None', 'InProgress', 'Failed', 'Warning', 'Completed',
        /// 'Skipped'</param>
        /// <param name="statusMessage">Migration status message</param>
        /// <param name="message">Migration progress message</param>
        /// <param name="databases">Selected databases as a map from database
        /// name to database id</param>
        /// <param name="databaseSummary">Summary of database results in the
        /// migration</param>
        /// <param name="exceptionsAndWarnings">Migration exceptions and
        /// warnings.</param>
        public RunCloudDBMigrationScenarioOutput(string id = default(string), string name = default(string), System.DateTimeOffset? startedOn = default(System.DateTimeOffset?), System.DateTimeOffset? endedOn = default(System.DateTimeOffset?), MigrationStatus? status = default(MigrationStatus?), MigrationState? state = default(MigrationState?), string statusMessage = default(string), string message = default(string), IDictionary<string, string> databases = default(IDictionary<string, string>), IDictionary<string, DataItemMigrationSummaryResult> databaseSummary = default(IDictionary<string, DataItemMigrationSummaryResult>), IList<ReportableException> exceptionsAndWarnings = default(IList<ReportableException>))
            : base(id, name, startedOn, endedOn, status, state, statusMessage, message, databases, databaseSummary, exceptionsAndWarnings)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

    }
}
