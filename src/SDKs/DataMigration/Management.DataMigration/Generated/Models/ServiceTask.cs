// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataMigrationService.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.DataMigrationService;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A task resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ServiceTask : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ServiceTask class.
        /// </summary>
        public ServiceTask()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceTask class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="type">Resource Type</param>
        /// <param name="tags">Resource Tags</param>
        /// <param name="location">Resource Location</param>
        /// <param name="name">Resource Name</param>
        /// <param name="etag">HTTP strong entity tag value. This is ignored if
        /// submitted.</param>
        /// <param name="errors">An array of errors</param>
        /// <param name="input">Arbitrary input to the worker</param>
        /// <param name="output">Output from the worker. Only generated by GET
        /// requests with the $expand parameter</param>
        /// <param name="scenarioId">The identifier of the scenario. Possible
        /// values include: 'DataMigration.GetUserTables',
        /// 'DataMigration.LoadMySqlMigrationProjectFile',
        /// 'DataMigration.LoadOracleMigrationProjectFile',
        /// 'DataMigration.RunAzureSQLDBMigration',
        /// 'DataMigration.RunCloudDBMigration', 'DataMigration.RunMigration',
        /// 'DataMigration.RunMySqlMigration',
        /// 'DataMigration.RunOracleMigration',
        /// 'DataMigration.SelectAnySqlMigrationTarget',
        /// 'DataMigration.SelectAzureSqlDbMigrationTarget',
        /// 'DataMigration.SelectCloudDBMigrationTarget',
        /// 'DataMigration.SelectMigrationSource',
        /// 'DataMigration.SelectMigrationTarget',
        /// 'DataMigration.ValidateCloudDBMigrationInput',
        /// 'DataMigration.ValidateMigrationInput',
        /// 'DataMigration.SelectOracleSourceScenarioId',
        /// 'DataMigration.SelectMySqlSourceScenarioId'</param>
        /// <param name="state">The state of the task. Possible values include:
        /// 'Canceled', 'Failed', 'FailedValidation', 'Faulted', 'Queued',
        /// 'Running', 'Succeeded', 'Unknown'</param>
        public ServiceTask(string id = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string location = default(string), string name = default(string), string etag = default(string), IList<ODataError> errors = default(IList<ODataError>), string input = default(string), IList<string> output = default(IList<string>), string scenarioId = default(string), ServiceTaskState? state = default(ServiceTaskState?))
            : base(id, type, tags, location, name)
        {
            Etag = etag;
            Errors = errors;
            Input = input;
            Output = output;
            ScenarioId = scenarioId;
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets HTTP strong entity tag value. This is ignored if
        /// submitted.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Gets or sets an array of errors
        /// </summary>
        [JsonProperty(PropertyName = "properties.errors")]
        public IList<ODataError> Errors { get; set; }

        /// <summary>
        /// Gets or sets arbitrary input to the worker
        /// </summary>
        [JsonProperty(PropertyName = "properties.input")]
        public string Input { get; set; }

        /// <summary>
        /// Gets or sets output from the worker. Only generated by GET requests
        /// with the $expand parameter
        /// </summary>
        [JsonProperty(PropertyName = "properties.output")]
        public IList<string> Output { get; set; }

        /// <summary>
        /// Gets or sets the identifier of the scenario. Possible values
        /// include: 'DataMigration.GetUserTables',
        /// 'DataMigration.LoadMySqlMigrationProjectFile',
        /// 'DataMigration.LoadOracleMigrationProjectFile',
        /// 'DataMigration.RunAzureSQLDBMigration',
        /// 'DataMigration.RunCloudDBMigration', 'DataMigration.RunMigration',
        /// 'DataMigration.RunMySqlMigration',
        /// 'DataMigration.RunOracleMigration',
        /// 'DataMigration.SelectAnySqlMigrationTarget',
        /// 'DataMigration.SelectAzureSqlDbMigrationTarget',
        /// 'DataMigration.SelectCloudDBMigrationTarget',
        /// 'DataMigration.SelectMigrationSource',
        /// 'DataMigration.SelectMigrationTarget',
        /// 'DataMigration.ValidateCloudDBMigrationInput',
        /// 'DataMigration.ValidateMigrationInput',
        /// 'DataMigration.SelectOracleSourceScenarioId',
        /// 'DataMigration.SelectMySqlSourceScenarioId'
        /// </summary>
        [JsonProperty(PropertyName = "properties.scenarioId")]
        public string ScenarioId { get; set; }

        /// <summary>
        /// Gets or sets the state of the task. Possible values include:
        /// 'Canceled', 'Failed', 'FailedValidation', 'Faulted', 'Queued',
        /// 'Running', 'Succeeded', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public ServiceTaskState? State { get; set; }

    }
}
