// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.DataMigration;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Project artifacts properties
    /// </summary>
    public partial class ProjectArtifactsResponse
    {
        /// <summary>
        /// Initializes a new instance of the ProjectArtifactsResponse class.
        /// </summary>
        public ProjectArtifactsResponse()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProjectArtifactsResponse class.
        /// </summary>
        /// <param name="artifactsLocation">An URL that points to the drop
        /// location to access project artifacts. When accessing this URL,
        /// requestor should provide an Authorization header with the Bearer
        /// authorization scheme, followed by his ARM JWT signature. Typical
        /// JWT will look like three dot-separated base64 encoded strings. We
        /// use last string as a shared secret between client and our artifacts
        /// service.
        /// </param>
        public ProjectArtifactsResponse(string artifactsLocation = default(string))
        {
            ArtifactsLocation = artifactsLocation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets an URL that points to the drop location to access
        /// project artifacts. When accessing this URL, requestor should
        /// provide an Authorization header with the Bearer authorization
        /// scheme, followed by his ARM JWT signature. Typical JWT will look
        /// like three dot-separated base64 encoded strings. We use last string
        /// as a shared secret between client and our artifacts service.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "artifactsLocation")]
        public string ArtifactsLocation { get; set; }

    }
}
