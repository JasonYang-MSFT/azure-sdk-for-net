// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.DataMigration;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ServiceProvisioningState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ServiceProvisioningState
    {
        [EnumMember(Value = "Accepted")]
        Accepted,
        [EnumMember(Value = "Deleting")]
        Deleting,
        [EnumMember(Value = "Deploying")]
        Deploying,
        [EnumMember(Value = "Succeeded")]
        Succeeded,
        [EnumMember(Value = "Failed")]
        Failed
    }
    internal static class ServiceProvisioningStateEnumExtension
    {
        internal static string ToSerializedValue(this ServiceProvisioningState? value)  =>
            value == null ? null : ((ServiceProvisioningState)value).ToSerializedValue();

        internal static string ToSerializedValue(this ServiceProvisioningState value)
        {
            switch( value )
            {
                case ServiceProvisioningState.Accepted:
                    return "Accepted";
                case ServiceProvisioningState.Deleting:
                    return "Deleting";
                case ServiceProvisioningState.Deploying:
                    return "Deploying";
                case ServiceProvisioningState.Succeeded:
                    return "Succeeded";
                case ServiceProvisioningState.Failed:
                    return "Failed";
            }
            return null;
        }

        internal static ServiceProvisioningState? ParseServiceProvisioningState(this string value)
        {
            switch( value )
            {
                case "Accepted":
                    return ServiceProvisioningState.Accepted;
                case "Deleting":
                    return ServiceProvisioningState.Deleting;
                case "Deploying":
                    return ServiceProvisioningState.Deploying;
                case "Succeeded":
                    return ServiceProvisioningState.Succeeded;
                case "Failed":
                    return ServiceProvisioningState.Failed;
            }
            return null;
        }
    }
}
