// Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataMigrationService.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.DataMigrationService;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Project metadata base object
    /// </summary>
    public partial class DataMigrationProjectMetadata
    {
        /// <summary>
        /// Initializes a new instance of the DataMigrationProjectMetadata
        /// class.
        /// </summary>
        public DataMigrationProjectMetadata()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataMigrationProjectMetadata
        /// class.
        /// </summary>
        /// <param name="sourceServerName">Source server name</param>
        /// <param name="sourceServerPort">Source server port number</param>
        /// <param name="sourceUsername">Source username</param>
        /// <param name="targetServerName">Target server name</param>
        /// <param name="targetUsername">Target username</param>
        /// <param name="targetDbName">Target database name</param>
        /// <param name="targetUsingWinAuth">Whether target connection is
        /// Windows authentication</param>
        /// <param name="selectedMigrationTables">List of tables selected for
        /// migration</param>
        public DataMigrationProjectMetadata(string sourceServerName = default(string), string sourceServerPort = default(string), string sourceUsername = default(string), string targetServerName = default(string), string targetUsername = default(string), string targetDbName = default(string), bool? targetUsingWinAuth = default(bool?), IList<MigrationTableMetadata> selectedMigrationTables = default(IList<MigrationTableMetadata>))
        {
            SourceServerName = sourceServerName;
            SourceServerPort = sourceServerPort;
            SourceUsername = sourceUsername;
            TargetServerName = targetServerName;
            TargetUsername = targetUsername;
            TargetDbName = targetDbName;
            TargetUsingWinAuth = targetUsingWinAuth;
            SelectedMigrationTables = selectedMigrationTables;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets source server name
        /// </summary>
        [JsonProperty(PropertyName = "sourceServerName")]
        public string SourceServerName { get; set; }

        /// <summary>
        /// Gets or sets source server port number
        /// </summary>
        [JsonProperty(PropertyName = "sourceServerPort")]
        public string SourceServerPort { get; set; }

        /// <summary>
        /// Gets or sets source username
        /// </summary>
        [JsonProperty(PropertyName = "sourceUsername")]
        public string SourceUsername { get; set; }

        /// <summary>
        /// Gets or sets target server name
        /// </summary>
        [JsonProperty(PropertyName = "targetServerName")]
        public string TargetServerName { get; set; }

        /// <summary>
        /// Gets or sets target username
        /// </summary>
        [JsonProperty(PropertyName = "targetUsername")]
        public string TargetUsername { get; set; }

        /// <summary>
        /// Gets or sets target database name
        /// </summary>
        [JsonProperty(PropertyName = "targetDbName")]
        public string TargetDbName { get; set; }

        /// <summary>
        /// Gets or sets whether target connection is Windows authentication
        /// </summary>
        [JsonProperty(PropertyName = "targetUsingWinAuth")]
        public bool? TargetUsingWinAuth { get; set; }

        /// <summary>
        /// Gets or sets list of tables selected for migration
        /// </summary>
        [JsonProperty(PropertyName = "selectedMigrationTables")]
        public IList<MigrationTableMetadata> SelectedMigrationTables { get; set; }

    }
}
