// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataMigrationService.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.DataMigrationService;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A Data Migration Service resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DataMigrationServiceModel : Resource
    {
        /// <summary>
        /// Initializes a new instance of the DataMigrationServiceModel class.
        /// </summary>
        public DataMigrationServiceModel()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataMigrationServiceModel class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="type">Resource Type</param>
        /// <param name="tags">Resource Tags</param>
        /// <param name="location">Resource Location</param>
        /// <param name="name">Resource Name</param>
        /// <param name="etag">HTTP strong entity tag value. Ignored if
        /// submitted</param>
        /// <param name="kind">The resource kind. Only 'vm' (the default) is
        /// supported.</param>
        /// <param name="provisioningState">The resource's provisioning state.
        /// Possible values include: 'Accepted', 'Deleting', 'Deploying',
        /// 'Succeeded', 'Failed'</param>
        /// <param name="publicKey">The public key of the service, used to
        /// encrypt secrets sent to the service</param>
        /// <param name="virtualSubnetId">The ID of the
        /// Microsoft.Network/virtualNetworks/subnets resource to which the
        /// service should be joined</param>
        /// <param name="sku">Service SKU</param>
        public DataMigrationServiceModel(string id = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string location = default(string), string name = default(string), string etag = default(string), string kind = default(string), ServiceProvisioningState? provisioningState = default(ServiceProvisioningState?), string publicKey = default(string), string virtualSubnetId = default(string), ServiceSku sku = default(ServiceSku))
            : base(id, type, tags, location, name)
        {
            Etag = etag;
            Kind = kind;
            ProvisioningState = provisioningState;
            PublicKey = publicKey;
            VirtualSubnetId = virtualSubnetId;
            Sku = sku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets HTTP strong entity tag value. Ignored if submitted
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Gets or sets the resource kind. Only 'vm' (the default) is
        /// supported.
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets the resource's provisioning state. Possible values
        /// include: 'Accepted', 'Deleting', 'Deploying', 'Succeeded', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public ServiceProvisioningState? ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the public key of the service, used to encrypt secrets
        /// sent to the service
        /// </summary>
        [JsonProperty(PropertyName = "properties.publicKey")]
        public string PublicKey { get; set; }

        /// <summary>
        /// Gets or sets the ID of the
        /// Microsoft.Network/virtualNetworks/subnets resource to which the
        /// service should be joined
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualSubnetId")]
        public string VirtualSubnetId { get; set; }

        /// <summary>
        /// Gets or sets service SKU
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public ServiceSku Sku { get; set; }

    }
}
