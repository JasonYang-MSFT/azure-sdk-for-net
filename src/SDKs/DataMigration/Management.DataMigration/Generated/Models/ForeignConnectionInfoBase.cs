// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataMigrationService.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.DataMigrationService;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the connection properties for a foreign platform
    /// </summary>
    public partial class ForeignConnectionInfoBase
    {
        /// <summary>
        /// Initializes a new instance of the ForeignConnectionInfoBase class.
        /// </summary>
        public ForeignConnectionInfoBase()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ForeignConnectionInfoBase class.
        /// </summary>
        /// <param name="serverName">Name of the server</param>
        /// <param name="portNumber">Port number</param>
        /// <param name="userName">User name</param>
        /// <param name="password">Password credential. It must be RSA
        /// encrypted by the public key of the VM, then base64 encoded. It must
        /// never be the plaintext! Cryptography class contains helper methods
        /// to perform the encryption.
        /// </param>
        public ForeignConnectionInfoBase(string serverName = default(string), int? portNumber = default(int?), string userName = default(string), string password = default(string))
        {
            ServerName = serverName;
            PortNumber = portNumber;
            UserName = userName;
            Password = password;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the server
        /// </summary>
        [JsonProperty(PropertyName = "serverName")]
        public string ServerName { get; set; }

        /// <summary>
        /// Gets or sets port number
        /// </summary>
        [JsonProperty(PropertyName = "portNumber")]
        public int? PortNumber { get; set; }

        /// <summary>
        /// Gets or sets user name
        /// </summary>
        [JsonProperty(PropertyName = "userName")]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or sets password credential. It must be RSA encrypted by the
        /// public key of the VM, then base64 encoded. It must never be the
        /// plaintext! Cryptography class contains helper methods to perform
        /// the encryption.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

    }
}
