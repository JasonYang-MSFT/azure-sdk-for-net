// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.DataMigration;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Output of the scenario that collects user tables for the given list of
    /// databases
    /// </summary>
    public partial class GetUserTablesScenarioOutput : ScenarioOutput
    {
        /// <summary>
        /// Initializes a new instance of the GetUserTablesScenarioOutput
        /// class.
        /// </summary>
        public GetUserTablesScenarioOutput()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GetUserTablesScenarioOutput
        /// class.
        /// </summary>
        /// <param name="validationErrors">Validation errors associated with
        /// the scenario</param>
        /// <param name="databasesToTables">Mapping from database name to list
        /// of tables</param>
        public GetUserTablesScenarioOutput(IList<ReportableException> validationErrors = default(IList<ReportableException>), IDictionary<string, IList<DatabaseTable>> databasesToTables = default(IDictionary<string, IList<DatabaseTable>>))
            : base(validationErrors)
        {
            DatabasesToTables = databasesToTables;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets mapping from database name to list of tables
        /// </summary>
        [JsonProperty(PropertyName = "databasesToTables")]
        public IDictionary<string, IList<DatabaseTable>> DatabasesToTables { get; private set; }

    }
}
