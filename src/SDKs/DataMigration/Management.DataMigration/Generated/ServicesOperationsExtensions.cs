// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataMigrationService
{
    using Microsoft.Azure;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ServicesOperations.
    /// </summary>
    public static partial class ServicesOperationsExtensions
    {
            /// <summary>
            /// Create or update DMS Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The PUT method creates a new service or updates an
            /// existing one. When a service is updated, existing child resources (i.e.
            /// tasks) are unaffected. Services currently support a single kind, "vm",
            /// which refers to a VM-based service, although other kinds may be added in
            /// the future. This method can change the kind, SKU, and network of the
            /// service, but if tasks are currently running (i.e. the service is busy),
            /// this will fail with 400 Bad Request ("ServiceIsBusy"). The provider will
            /// reply when successful with 200 OK or 201 Created. Long-running operations
            /// use the provisioningState property.
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// Information about the service
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            public static DataMigrationServiceModel CreateOrUpdate(this IServicesOperations operations, DataMigrationServiceModel parameters, string groupName, string resourceName)
            {
                return operations.CreateOrUpdateAsync(parameters, groupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update DMS Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The PUT method creates a new service or updates an
            /// existing one. When a service is updated, existing child resources (i.e.
            /// tasks) are unaffected. Services currently support a single kind, "vm",
            /// which refers to a VM-based service, although other kinds may be added in
            /// the future. This method can change the kind, SKU, and network of the
            /// service, but if tasks are currently running (i.e. the service is busy),
            /// this will fail with 400 Bad Request ("ServiceIsBusy"). The provider will
            /// reply when successful with 200 OK or 201 Created. Long-running operations
            /// use the provisioningState property.
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// Information about the service
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataMigrationServiceModel> CreateOrUpdateAsync(this IServicesOperations operations, DataMigrationServiceModel parameters, string groupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(parameters, groupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get DMS Service Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The GET method retrieves information about a service
            /// instance.
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            public static DataMigrationServiceModel Get(this IServicesOperations operations, string groupName, string resourceName)
            {
                return operations.GetAsync(groupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get DMS Service Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The GET method retrieves information about a service
            /// instance.
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataMigrationServiceModel> GetAsync(this IServicesOperations operations, string groupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(groupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete DMS Service Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The DELETE method deletes a service. Any running tasks
            /// will be canceled.
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            public static void Delete(this IServicesOperations operations, string groupName, string resourceName)
            {
                operations.DeleteAsync(groupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete DMS Service Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The DELETE method deletes a service. Any running tasks
            /// will be canceled.
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IServicesOperations operations, string groupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(groupName, resourceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Create or update DMS Service Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The PATCH method updates an existing service. This
            /// method can change the kind, SKU, and network of the service, but if tasks
            /// are currently running (i.e. the service is busy), this will fail with 400
            /// Bad Request ("ServiceIsBusy").
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// Information about the service
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            public static DataMigrationServiceModel Update(this IServicesOperations operations, DataMigrationServiceModel parameters, string groupName, string resourceName)
            {
                return operations.UpdateAsync(parameters, groupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update DMS Service Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The PATCH method updates an existing service. This
            /// method can change the kind, SKU, and network of the service, but if tasks
            /// are currently running (i.e. the service is busy), this will fail with 400
            /// Bad Request ("ServiceIsBusy").
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// Information about the service
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataMigrationServiceModel> UpdateAsync(this IServicesOperations operations, DataMigrationServiceModel parameters, string groupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(parameters, groupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Check service health status
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. This action performs a health check and returns the
            /// status of the service and virtual machine size.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            public static DataMigrationServiceStatusResponse CheckStatus(this IServicesOperations operations, string groupName, string resourceName)
            {
                return operations.CheckStatusAsync(groupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Check service health status
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. This action performs a health check and returns the
            /// status of the service and virtual machine size.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataMigrationServiceStatusResponse> CheckStatusAsync(this IServicesOperations operations, string groupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckStatusWithHttpMessagesAsync(groupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get compatible SKUs
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The skus action returns the list of SKUs that a service
            /// resource can be updated to.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            public static IPage<AvailableServiceSku> ListSkus(this IServicesOperations operations, string groupName, string resourceName)
            {
                return operations.ListSkusAsync(groupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get compatible SKUs
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The skus action returns the list of SKUs that a service
            /// resource can be updated to.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<AvailableServiceSku>> ListSkusAsync(this IServicesOperations operations, string groupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListSkusWithHttpMessagesAsync(groupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Check nested resource name validity and availability
            /// </summary>
            /// <remarks>
            /// This method checks whether a proposed nested resource name is valid and
            /// available.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='parameters'>
            /// Requested name to validate
            /// </param>
            public static NameAvailabilityResponse CheckChildrenNameAvailability(this IServicesOperations operations, string groupName, string resourceName, NameAvailabilityRequest parameters)
            {
                return operations.CheckChildrenNameAvailabilityAsync(groupName, resourceName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Check nested resource name validity and availability
            /// </summary>
            /// <remarks>
            /// This method checks whether a proposed nested resource name is valid and
            /// available.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='parameters'>
            /// Requested name to validate
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<NameAvailabilityResponse> CheckChildrenNameAvailabilityAsync(this IServicesOperations operations, string groupName, string resourceName, NameAvailabilityRequest parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckChildrenNameAvailabilityWithHttpMessagesAsync(groupName, resourceName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Run a task synchronously
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. This method runs a task, returns the response, and
            /// deletes the associated storage in a single operation. It is intended to be
            /// used for short-running, transient scenarios (such as "validate this input")
            /// that should not require the overhead and complexity of creating a new task
            /// resource, polling for results, and deleting it on the client side.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='parameters'>
            /// Information about the task to create
            /// </param>
            /// <param name='timeoutMs'>
            /// The number of milliseconds the task is allowed to run, up to 20000
            /// </param>
            public static ServiceTaskProperties RunTask(this IServicesOperations operations, string groupName, string resourceName, NewServiceTask parameters, int? timeoutMs = default(int?))
            {
                return operations.RunTaskAsync(groupName, resourceName, parameters, timeoutMs).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Run a task synchronously
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. This method runs a task, returns the response, and
            /// deletes the associated storage in a single operation. It is intended to be
            /// used for short-running, transient scenarios (such as "validate this input")
            /// that should not require the overhead and complexity of creating a new task
            /// resource, polling for results, and deleting it on the client side.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='parameters'>
            /// Information about the task to create
            /// </param>
            /// <param name='timeoutMs'>
            /// The number of milliseconds the task is allowed to run, up to 20000
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServiceTaskProperties> RunTaskAsync(this IServicesOperations operations, string groupName, string resourceName, NewServiceTask parameters, int? timeoutMs = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RunTaskWithHttpMessagesAsync(groupName, resourceName, parameters, timeoutMs, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get services in resource group
            /// </summary>
            /// <remarks>
            /// The Services resource is the top-level resource that represents the Data
            /// Migration Service. This method returns a list of service resources in a
            /// resource group.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            public static IPage<DataMigrationServiceModel> ListByResourceGroup(this IServicesOperations operations, string groupName)
            {
                return operations.ListByResourceGroupAsync(groupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get services in resource group
            /// </summary>
            /// <remarks>
            /// The Services resource is the top-level resource that represents the Data
            /// Migration Service. This method returns a list of service resources in a
            /// resource group.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DataMigrationServiceModel>> ListByResourceGroupAsync(this IServicesOperations operations, string groupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(groupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get services in subscription
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. This method returns a list of service resources in a
            /// subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<DataMigrationServiceModel> List(this IServicesOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get services in subscription
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. This method returns a list of service resources in a
            /// subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DataMigrationServiceModel>> ListAsync(this IServicesOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Check name validity and availability
            /// </summary>
            /// <remarks>
            /// This method checks whether a proposed top-level resource name is valid and
            /// available.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// Requested name to validate
            /// </param>
            public static NameAvailabilityResponse CheckNameAvailability(this IServicesOperations operations, NameAvailabilityRequest parameters)
            {
                return operations.CheckNameAvailabilityAsync(parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Check name validity and availability
            /// </summary>
            /// <remarks>
            /// This method checks whether a proposed top-level resource name is valid and
            /// available.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// Requested name to validate
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<NameAvailabilityResponse> CheckNameAvailabilityAsync(this IServicesOperations operations, NameAvailabilityRequest parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckNameAvailabilityWithHttpMessagesAsync(parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update DMS Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The PUT method creates a new service or updates an
            /// existing one. When a service is updated, existing child resources (i.e.
            /// tasks) are unaffected. Services currently support a single kind, "vm",
            /// which refers to a VM-based service, although other kinds may be added in
            /// the future. This method can change the kind, SKU, and network of the
            /// service, but if tasks are currently running (i.e. the service is busy),
            /// this will fail with 400 Bad Request ("ServiceIsBusy"). The provider will
            /// reply when successful with 200 OK or 201 Created. Long-running operations
            /// use the provisioningState property.
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// Information about the service
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            public static DataMigrationServiceModel BeginCreateOrUpdate(this IServicesOperations operations, DataMigrationServiceModel parameters, string groupName, string resourceName)
            {
                return operations.BeginCreateOrUpdateAsync(parameters, groupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update DMS Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The PUT method creates a new service or updates an
            /// existing one. When a service is updated, existing child resources (i.e.
            /// tasks) are unaffected. Services currently support a single kind, "vm",
            /// which refers to a VM-based service, although other kinds may be added in
            /// the future. This method can change the kind, SKU, and network of the
            /// service, but if tasks are currently running (i.e. the service is busy),
            /// this will fail with 400 Bad Request ("ServiceIsBusy"). The provider will
            /// reply when successful with 200 OK or 201 Created. Long-running operations
            /// use the provisioningState property.
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// Information about the service
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataMigrationServiceModel> BeginCreateOrUpdateAsync(this IServicesOperations operations, DataMigrationServiceModel parameters, string groupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(parameters, groupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete DMS Service Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The DELETE method deletes a service. Any running tasks
            /// will be canceled.
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            public static void BeginDelete(this IServicesOperations operations, string groupName, string resourceName)
            {
                operations.BeginDeleteAsync(groupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete DMS Service Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The DELETE method deletes a service. Any running tasks
            /// will be canceled.
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IServicesOperations operations, string groupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(groupName, resourceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Create or update DMS Service Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The PATCH method updates an existing service. This
            /// method can change the kind, SKU, and network of the service, but if tasks
            /// are currently running (i.e. the service is busy), this will fail with 400
            /// Bad Request ("ServiceIsBusy").
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// Information about the service
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            public static DataMigrationServiceModel BeginUpdate(this IServicesOperations operations, DataMigrationServiceModel parameters, string groupName, string resourceName)
            {
                return operations.BeginUpdateAsync(parameters, groupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update DMS Service Instance
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The PATCH method updates an existing service. This
            /// method can change the kind, SKU, and network of the service, but if tasks
            /// are currently running (i.e. the service is busy), this will fail with 400
            /// Bad Request ("ServiceIsBusy").
            ///
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// Information about the service
            /// </param>
            /// <param name='groupName'>
            /// Name of the resource group
            /// </param>
            /// <param name='resourceName'>
            /// Name of the resource
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataMigrationServiceModel> BeginUpdateAsync(this IServicesOperations operations, DataMigrationServiceModel parameters, string groupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(parameters, groupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get compatible SKUs
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The skus action returns the list of SKUs that a service
            /// resource can be updated to.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<AvailableServiceSku> ListSkusNext(this IServicesOperations operations, string nextPageLink)
            {
                return operations.ListSkusNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get compatible SKUs
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. The skus action returns the list of SKUs that a service
            /// resource can be updated to.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<AvailableServiceSku>> ListSkusNextAsync(this IServicesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListSkusNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get services in resource group
            /// </summary>
            /// <remarks>
            /// The Services resource is the top-level resource that represents the Data
            /// Migration Service. This method returns a list of service resources in a
            /// resource group.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<DataMigrationServiceModel> ListByResourceGroupNext(this IServicesOperations operations, string nextPageLink)
            {
                return operations.ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get services in resource group
            /// </summary>
            /// <remarks>
            /// The Services resource is the top-level resource that represents the Data
            /// Migration Service. This method returns a list of service resources in a
            /// resource group.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DataMigrationServiceModel>> ListByResourceGroupNextAsync(this IServicesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get services in subscription
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. This method returns a list of service resources in a
            /// subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<DataMigrationServiceModel> ListNext(this IServicesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get services in subscription
            /// </summary>
            /// <remarks>
            /// The services resource is the top-level resource that represents the Data
            /// Migration Service. This method returns a list of service resources in a
            /// subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<DataMigrationServiceModel>> ListNextAsync(this IServicesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
